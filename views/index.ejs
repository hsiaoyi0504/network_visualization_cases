<html>
  <head>
    <title><%= title %></title>
    <link rel="stylesheet" type="text/css" href="css/style.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
    <link rel="stylesheey" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.11/css/dataTables.bootstrap.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.2/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.11/css/jquery.dataTables.min.css">
    <script src="https://code.jquery.com/jquery-1.12.0.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.11/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.11/js/dataTables.bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cytoscape/2.6.8/cytoscape.js"></script>
  </head>
  <body>
    <div class="container">
      <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6" id="control">
        <div class="row">
            <div id="nodeNumInputDiv">
              <div class="form-group">
                <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4" id="nodeNumInputLabelDiv">
                  <label id="nodeNumInputLabel" for="nodeNumInput">Type in the number of nodes:</label>
                </div>
                <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2" id="nodeNumInputDiv">
                  <input id="nodeNumInput" type="number" class="form-control"></input>
                </div>
                <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1" id="nodeNumUpdateButtonDiv">
                  <button id="nodeNumUpdateButton" class="btn btn-primary">update</button>
                </div>
              </div>
            </div>
        </div>
        <div class="row">
          <table id="proteinTable" class="table table-striped table-bordered table-condensed "></table>
        </div>
      </div>
      <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
        <div id="cy"></div>
        <i class="fa fa-refresh" id="refresh" aria-hidden="true"></i>
        <i class="fa fa-expand" id="expand" aria-hidden="true"></i>
        <i class="fa fa-compress" id="compress" aria-hidden="true"></i>
      </div>
    </div>
    <script type="text/javascript">
      var elements = <%- JSON.stringify(elements) %>;
      var cy = cytoscape({
            container: document.getElementById('cy'), // container to render in
            elements: elements[0], //list of graph elements to start with
            style: [ // the stylesheet for the graph
                {
                  selector: 'node',
                  style: {
                    'background-color': '#666',
                    'label': 'data(id)'
                  }
                },
                {
                  selector: 'edge',
                  style: {
                    'curve-style': 'haystack',
                    'width': 3,
                    'line-color': '#ccc',
                    'target-arrow-color': '#ccc',
                    'target-arrow-shape': 'triangle'
                  }
                },
                {
                  selector: ':selected',
                  style: {
                    'background-color': 'blue'
                  } 
                }
            ],
            boxSelectionEnabled: true,
            selectionType: 'additive',
            layout: {
                name: 'grid',
                rows: 30
            }
        });
        var collectionAll = cy.elements();
        var collection = cy.elements("node[weight > 0]");
        document.getElementById('nodeNumInputLabel').innerHTML = document.getElementById('nodeNumInputLabel').innerHTML + '(Maximum:' + (cy.elements("node").size()) +')';
        cy.elements("node[weight > 50]").remove();
        var currentNodeNum = cy.elements("node[weight > 0]").size();
        document.getElementById('nodeNumInput').value = cy.elements("node[weight > 0]").size();
        cy.layout({name: 'cose'});
        cy.fit();
        var data=[];
        for(i=0;i<elements[1].length;i++){
            data.push([
              elements[1][i][2],
              elements[1][i][1],
              elements[1][i][5],
              elements[1][i][6]
            ]);
        }
        $(document).ready(function() {
            var table = $('#proteinTable').DataTable( {
                data: data,
                columns: [
                    { title: "Short Name" },
                    { title: "Full Name" },
                    { title: "Relative Abundance (emPAI)"},
                    { title: "isOnce", visible: false}
                ],
                lengthMenu: [[50,100,150,-1],[50,100,150,'All']],
                scrollX: true,
                order: [[ 2, "desc" ]]
            } );

            $('#proteinTable tbody').on( 'click', 'tr', function () {
                // $(this).toggleClass('selected');
                temp = table.rows('.selected').data();
                for(var i=0;i<temp.length;i++){
                  if(temp[i][3]){
                      cy.getElementById(temp[i][0]).json({selected: true});
                  }else{
                      cy.getElementById(temp[i][1].replace(/ /gi,'_')).json({selected: true});
                  }
                }
                // temp = table.rows({ selected: false }).data();
                // for(var i=0;i<temp.length;i++){
                //   if(temp[i][3]){
                //       cy.getElementById(temp[i][0]).json({selected: false});
                //   }else{
                //       cy.getElementById(temp[i][1].replace(/ /gi,'_')).json({selected: false});
                //   }
                // }
            } );
        } );
        document.getElementById('nodeNumUpdateButton').onclick = function(){
          if( document.getElementById('nodeNumInput').value != currentNodeNum ){
            collectionAll.restore();
            var collectionRemove = cy.elements("node[weight >" +document.getElementById('nodeNumInput').value+"]");
            collectionRemove.remove();
            currentNodeNum = document.getElementById('nodeNumInput').value;
            cy.layout({name: 'cose'});
            cy.fit();
          }
        };
        document.getElementById('refresh').onclick = function(){
          cy.fit();
        };
        document.getElementById('expand').onclick = function(){
          if(cy.zoom()*2<=cy.maxZoom())
            cy.zoom(cy.zoom()*2);
        };
        document.getElementById('compress').onclick = function(){
          if(cy.zoom()/2>=cy.minZoom())
            cy.zoom(cy.zoom()/2);
        };
    </script>
  </body>
</html>