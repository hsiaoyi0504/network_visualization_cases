<html>
  <head>
    <title><%= title %></title>
    <link rel="stylesheet" type="text/css" href="css/style.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <script src="js/cytoscape.js"></script>
  </head>
  <body>
    <div class="container">
      <div class="col-*-10">
        <div id="cy"></div>
      </div>
      <div class="col-*-2" id="control">
        <div id="nodeNumInputDiv">
          <div class="form-group">
            <label id="nodeNumInputLabel" for="nodeNumInput">Type in the number of nodes:</label>
            <input id="nodeNumInput" type="number" class="form-control"></input>
            <button id="nodeNumUpdateButton" class="btn btn-primary">update</button>
          </div>
        </div>
      </div>
    </div>
    <script type="text/javascript">
      var elements = <%- JSON.stringify(elements) %>;
      var cy = cytoscape({
            container: document.getElementById('cy'), // container to render in
            elements: elements, //list of graph elements to start with
            style: [ // the stylesheet for the graph
                {
                  selector: 'node',
                  style: {
                    'background-color': '#666',
                    'label': 'data(id)'
                  }
                },
                {
                  selector: 'edge',
                  style: {
                    'curve-style': 'haystack',
                    'width': 3,
                    'line-color': '#ccc',
                    'target-arrow-color': '#ccc',
                    'target-arrow-shape': 'triangle'
                  }
                }
            ],
            layout: {
                name: 'grid',
                rows: 30
            }

        });
        var collectionAll = cy.elements();
        var collection = cy.elements("node[weight > 0]");
        document.getElementById('nodeNumInputLabel').innerHTML = document.getElementById('nodeNumInputLabel').innerHTML + '(Maximum:' + cy.elements("node[weight > 0]").size() +')';
        cy.elements("node[weight > 100]").remove();
        var currentNodeNum = cy.elements("node[weight > 0]").size();
        document.getElementById('nodeNumInput').value = cy.elements("node[weight > 0]").size();
        cy.layout({name: 'cose'});
        cy.fit();
        document.getElementById('nodeNumUpdateButton').onclick = function(){
          if( document.getElementById('nodeNumInput').value != currentNodeNum ){
            collectionAll.restore();
            var collectionRemove = cy.elements("node[weight >" +document.getElementById('nodeNumInput').value+"]");
            collectionRemove.remove();
            currentNodeNum = document.getElementById('nodeNumInput').value;
            cy.layout({name: 'cose'});
            cy.fit();
          }
        }
    </script>
  </body>
</html>